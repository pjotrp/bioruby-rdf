# Template for generating RDF triples from Signal-P output
#
# And create RDF with 
#
#   env INFILE=phobius.txt erb -r ./lib/bio-rdf/rdf templates/phobius.rdf
#
# Example: 
#
#   :Ts_CDS_phobius_Ts_CDS_tab_EFV51680  :gene_name     "EFV51680" .
#   :Ts_CDS_phobius_Ts_CDS_tab_EFV51680  :species       "Ts" .
#   :Ts_CDS_phobius_Ts_CDS_tab_EFV51680  :source        "CDS" .
#   :Ts_CDS_phobius_Ts_CDS_tab_EFV51680  :phobius       true .
#   :Ts_CDS_phobius_Ts_CDS_tab_EFV51680  :transmembrane false .
#
# Two possible input files exist, one native, one with grep filename prefixed:
#
#   EFV47125                        0  Y n6-16c21/22o
#
# or
#
#   Ts_CDS/phobius_Ts_CDS.tab:EFV47125                        0  Y n6-16c21/22o
#   

<%= File.read(File.dirname(__FILE__)+'/preamble.rdf')  %>

<%
   File.open(ENV["INFILE"]).each_line do |line|
     fields = line.split
     if fields[2] == 'Y'
       gene = fields.first
       id = BioRdf::Turtle.mangle_identifier(gene)
       # Get species and source from, e.g., 'Mi_CDS'
       (species,source) = gene.scan(/(\w\w)_(CDS|DNA|EST)/)[0]
       m = gene.match(/\.\w\w\w:(\S+)$/)
       gene = m[1] if m
       # Look for transmembrame
       loop = fields[3]
       transmembrane = loop.include?('i') and loop.include?('o')
%>
  :<%= id %>  :gene_name     "<%= gene %>" .
  :<%= id %>  :species       "<%= species %>" .
  :<%= id %>  :source        "<%= source %>" .
  :<%= id %>  :phobius       true .
  :<%= id %>  :transmembrane <%= transmembrane %> .
<%  end 
  end %>
