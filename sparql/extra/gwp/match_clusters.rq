# List all clusters that have within dataset matches
#
# env HASH="species1=Mi,is_pos_sel=1,source1=DNA,species2=Other,is_pos_sel2=1" ../../../scripts/sparql-csv.sh match_clusters.rq
#
<%
   # p ENV['HASH']
   h=ENV['HASH'].split(',').map{ |s| s.split('=') }.to_h
   # inputs
   species1     = h['species1']
   source1      = h['source1']
   species2     = h['species2'] # Other = not within species
   source2      = h['source2']
   # options
   by_gene      = h['by_gene']
   cluster      = h['cluster']
   paired       = h['paired']
   is_pos_sel   = h['is_pos_sel']
   is_pos_sel2  = h['is_pos_sel2']

   filter = ''
   filter = species2 if species2 and species2 != 'Other' 
   filter += '_'+source2 if source2
%>

<%= File.read(File.dirname(__FILE__)+'/preamble.rq')  %>

<% if not by_gene %>
  <% if paired %>
    SELECT DISTINCT ?cluster ?hcluster ?hspecies WHERE 
  <% elsif cluster %>
    SELECT DISTINCT ?cluster WHERE 
  <% else %>
    SELECT DISTINCT ?cluster ?hspecies WHERE 
  <% end %>
<% else %>
  SELECT ?cluster ?hcluster ?hspecies ?hname WHERE 
<% end %>
{

  ?cluster
    :species "<%= species1 %>" ;
    <%= ':is_pos_sel true ;' if is_pos_sel %>
    # :lnL ?lnl . <- implicit
    :source "<%= source1 %>" .
  ?hgene
    a :blast_match ;
    # :homolog_species ?hspecies ;
    # :homolog_species "<%= species1 %>" ;
    # :homolog_source "<%= source1 %>" ;
    :homolog_cluster ?cluster ;  # match all genes in cluster
    :cluster ?hcluster .
    # rdf:label ?hname .
  # Just make sure there are no matches to self:
  ?hcluster :species ?hspecies .
  FILTER (?cluster != ?hcluster) .  # skip exact self matches
  FILTER (?hspecies != "<%= species1 %>") .  # skip exact self matches

  <%= '?hcluster :is_pos_sel true .' if is_pos_sel2 %>
  <% if species2 == 'Other' %>
  #  MINUS { ?hgene :homolog_species ?hspecies } .
  <% end %>
  <% if filter and filter != '' %>
  #  FILTER (CONTAINS(?hname,"<%= filter %>" )) .
  <% end %>
}
